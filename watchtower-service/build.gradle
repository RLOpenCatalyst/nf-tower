plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "groovy"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "com.google.cloud.tools.jib" version "0.9.9"
}

version "0.1"
group "io.sequera.watchtower"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    compile "io.micronaut:micronaut-runtime-groovy"
    compile "io.micronaut:micronaut-validation"
    compile "io.swagger.core.v3:swagger-annotations"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    
    compile "io.micronaut.configuration:micronaut-hibernate-gorm"
    compile 'mysql:mysql-connector-java:8.0.16'
    
    compile "javax.activation:activation:1.1.1"
    compile "javax.mail:mail:1.4.7"
    compile "org.jsoup:jsoup:1.11.2"
    compile "org.apache.commons:commons-text:1.6"
    compile "org.codehaus.groovy:groovy-templates:2.5.3"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.8"
    
    compileOnly "io.micronaut:micronaut-inject-groovy"
    compileOnly "io.micronaut.configuration:micronaut-openapi"

    compile "io.micronaut:micronaut-management"
    
    annotationProcessor "io.micronaut:micronaut-security"
    compile "io.micronaut:micronaut-security-jwt"
    
    runtime "ch.qos.logback:logback-classic:1.2.3"

    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testCompile "io.micronaut.test:micronaut-test-spock:1.0.3"

    testCompile "org.testcontainers:testcontainers:1.11.2"
    testCompile "org.testcontainers:spock:1.11.2"
    testCompile "org.subethamail:subethasmtp:3.1.7"
    testCompile 'net.bytebuddy:byte-buddy:1.9.12'
    testCompile "org.objenesis:objenesis:2.1"
}

test.classpath += configurations.developmentOnly

mainClassName = "io.seqera.watchtower.Application"
tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

/*
 * Copyright (c) 2019, Seqera Labs.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 *
 * This Source Code Form is "Incompatible With Secondary Licenses", as
 * defined by the Mozilla Public License, v. 2.0.
 */

//Only for the main (not test) source set
compileGroovy.groovyOptions.configurationScript = file('src/groovyCompile/groovycConfig.groovy')

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
jib.to.image = 'gcr.io/watchtower-service/jib-image'
